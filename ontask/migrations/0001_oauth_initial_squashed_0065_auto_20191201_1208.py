# Generated by Django 2.2.6 on 2019-12-01 03:03

from collections import Counter

from django.conf import settings
from django.db import connection as con, migrations, models
import django.utils.timezone
import fernet_fields.fields
from psycopg2 import sql

from ontask.dataops.sql import db_rename_column
from ontask.models import Workflow


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# ontask.migrations.0002_Version_6_UPGRADE
# ontask.migrations.0003_transfer_siteprefs
# ontask.migrations.0004_remove_old_migration_refs
# ontask.migrations.0011_refresh_query_builder_ops
# ontask.migrations.0048_auto_20191016_2328
# ontask.migrations.0060_auto_20191027_1809

def copy_table_content(apps, schema_editor):
    __table_name_pairs = [
        ('action_action', 'ontask_action'),
        ('action_actioncolumnconditiontuple', 'ontask_actioncolumnconditiontuple'),
        ('action_condition', 'ontask_condition'),
        ('action_condition_columns', 'ontask_condition_columns'),
        ('core_ontaskuser', 'ontask_ontaskuser'),
        ('dataops_plugin', 'ontask_plugin'),
        ('dataops_sqlconnection', 'ontask_sqlconnection'),
        ('logs_log', 'ontask_log'),
        ('oauth_oauthusertoken', 'ontask_oauthusertoken'),
        ('profiles_profile', 'ontask_profile'),
        ('scheduler_scheduledaction', 'ontask_scheduledaction'),
        ('table_view', 'ontask_view'),
        ('table_view_columns', 'ontask_view_columns'),
        ('workflow_column', 'ontask_column'),
        ('workflow_workflow', 'ontask_workflow'),
        ('workflow_workflow_shared', 'ontask_workflow_shared'),
        ('workflow_workflow_lusers', 'ontask_workflow_lusers'),
        ('workflow_workflow_star', 'ontask_workflow_star'),
    ]

    __sql_rename_table = 'ALTER TABLE {0} RENAME TO {1}'
    __sql_rename_sequence = 'ALTER SEQUENCE {0} RENAME TO {1}'
    __sql_drop_table = 'DROP TABLE {0} CASCADE'
    __sql_get_count = 'SELECT COUNT(*) FROM {0}'

    with con.cursor() as cursor:
        table_names = [
            citem.name for citem in con.introspection.get_table_list(cursor)]
        cursor.execute(
            sql.SQL('SELECT relname FROM pg_class WHERE relkind = \'S\'')
        )
        sequence_names = [sitem[0] for sitem in cursor.fetchall()]

        # Loop over all the tables and rename table and sequence
        for start_name, final_name in __table_name_pairs:
            if start_name not in table_names:
                # There is no old table, nothing to do
                continue

            # Detect if the new table has already some information
            cursor.execute(sql.SQL(__sql_get_count.format(final_name)))
            nelems = cursor.fetchall()[0][0]
            if nelems != 0:
                # If table with final name is not empty, skip
                cursor.execute(sql.SQL(__sql_get_count.format(start_name)))
                old_nelems = cursor.fetchall()[0][0]
                if nelems != old_nelems:
                    raise Exception(
                        'Partial migration detected in {0}'.format(start_name))
                continue

            # Drop the final table to proceed with the rename
            cursor.execute(
                sql.SQL(__sql_drop_table.format(final_name))
            )

            cursor.execute(
                sql.SQL(__sql_rename_table).format(
                    sql.Identifier(start_name),
                    sql.Identifier(final_name))
            )

            if f'{start_name}_id_seq' in sequence_names:
                cursor.execute(
                    sql.SQL(__sql_rename_sequence).format(
                        sql.Identifier(f'{start_name}_id_seq'),
                        sql.Identifier(f'{final_name}_id_seq'),
                    )
                )


def copy_site_preferences(apps, schema_editor):
    with con.cursor() as cursor:
        table_names = [
            citem.name for citem in con.introspection.get_table_list(cursor)]
        if 'siteprefs_preference' not in table_names:
            return

        # Remove left over siteprefs for app email_action
        cursor.execute(
            sql.SQL(
                'DELETE FROM siteprefs_preference WHERE app = {0}').format(
                    sql.Literal('email_action')))

        # Change logs app to ontask
        cursor.execute(
            sql.SQL('UPDATE siteprefs_preference '
                    + 'SET app={0} where app={1}').format(
                    sql.Literal('ontask'),
                    sql.Literal('logs')))

        # Change max_list_size to max_log_list_size
        cursor.execute(
            sql.SQL('UPDATE siteprefs_preference '
                    + 'SET name={0} where name={1}').format(
                    sql.Literal('max_log_list_size'),
                    sql.Literal('max_list_size')))

        # Change core app to ontask
        cursor.execute(
            sql.SQL(
                'UPDATE siteprefs_preference SET '
                + 'app={0} where app={1}').format(
                    sql.Literal('ontask'),
                    sql.Literal('core')
                )
            )

        # Delete those in action that start with email_
        cursor.execute(
            sql.SQL(
                'DELETE FROM siteprefs_preference where '
                + 'app={0} and name LIKE {1}').format(
                    sql.Literal('action'),
                    sql.Literal('email_%')))


        # Change action app to ontask
        cursor.execute(
            sql.SQL(
                'UPDATE siteprefs_preference '
                + 'SET app = {0} where app = {1}').format(
                    sql.Literal('ontask'),
                    sql.Literal('action')))

        # Delete minute_step
        cursor.execute(
            sql.SQL(
                'DELETE FROM siteprefs_preference where app={0} and '
                + 'name={1}').format(
                    sql.Literal('core'),
                    sql.Literal('minute_step')))

        # Change dataops app to ontask
        cursor.execute(
            sql.SQL(
                'UPDATE siteprefs_preference SET '
                + 'app={0} where app={1}').format(
                    sql.Literal('ontask'),
                    sql.Literal('dataops')))


def remove_old_migration_refs(apps, schema_editor):
    __sql_delete_migration_ref = 'DELETE FROM django_migrations WHERE app={0}'

    old_apps = [
        'action', 'core', 'dataops', 'logs', 'oauth', 'ontask_oauth',
        'profiles', 'scheduler', 'table', 'workflow']

    with con.cursor() as cursor:
        for app_name in old_apps:
            cursor.execute(
                sql.SQL(__sql_delete_migration_ref).format(
                    sql.Literal(app_name)))


def _adjust_boolean_operand(node):
    """Traverse the structure recursively and adjust boolean operand."""
    if 'condition' not in node:
        # Terminal case
        if node['type'] != 'boolean':
            # Done, the type is left unchanged
            return

        # Processing terminal case of type boolean
        node['type'] = 'string'
        if node['input'] == 'radio':
            node['input'] = 'select'

        if node['value'] == '1':
            node['value'] = 'true'
        elif node['value'] == '0':
            node['value'] = 'false'
        else:
            raise Exception('Incorrect formula found in migration.')
        return

    for subnode in node['rules']:
        _adjust_boolean_operand(subnode)


def refresh_query_builder_ops(apps, schema_editor):
    """Refresh the field of the query_builder_ops for each workflow."""
    for witem in Workflow.objects.all():
        witem.set_query_builder_ops()
        witem.save()


def refresh_condition_boolean(apps, schema_editor):
    """Refresh the structure of all the conditions.

    The reason for this change is because the operands of type boolean need
    to be modified from this structure:

    {'not': False,
     'rules': [{'id': 'registered',
     'type': 'boolean',
     'field': 'registered',
     'input': 'radio',
     'value': '1',
     'operator': 'equal'}],
     'valid': True,
     'condition': 'AND'}

     To this one

     {'not': False,
      'rules': [{'id': 'registered',
      'type': 'boolean',
      'field': 'registered',
      'input': 'select',    <---- DIFFERENT
      'value': 'Yes',       <---- DIFFERENT
      'operator': 'equal'}],
      'valid': True,
      'condition': 'AND'}
    """
    Condition = apps.get_model('ontask', 'Condition')
    for citem in Condition.objects.all():
        _adjust_boolean_operand(citem.formula)
        citem.save()


def _make_unique_new_names(name_list):
    """Create a list if new names that are unique

    :param name_list: List of names to make unique
    :return: List of names that are unique
    """
    if len(name_list) == len(set(name_list)):
        return name_list

    cntr = Counter(name_list)
    max_rep = max(cntr.values())

    digits = {}
    for name, appears in cntr.items():
        if appears == 1:
            continue
        dig = 1
        while 10 ** dig < appears:
            dig += 1
        digits[name] = dig

    new_names = []
    for col in name_list:
        appears = cntr[col]
        if appears == 1:
            new_names.append(col)
            continue

        new_names.append(col[:-digits[col]] + str(appears).zfill(digits[col]))
        cntr[col] = cntr[col] - 1

    return new_names


def trim_column_names(apps, schema_editor):
    """
    Traverse all workshops and trim column names to 63 characters.

    :param apps:
    :param schema_editor:
    :return:
    """
    for wflow in Workflow.objects.all():
        rename_cols = [
            column for column in wflow.columns.all() if len(column.name) > 63
        ]
        if not rename_cols:
            continue

        new_names = _make_unique_new_names(
            [col.name[:63] for col in rename_cols])

        for col, new_name in zip(rename_cols, new_names):
            if col.name[:63] == new_name:
                continue

            db_rename_column(
                wflow.get_data_frame_table_name(),
                col.name[:63],
                new_name)

            col.name = new_name
            col.save()


def reverse_migration(apps, schema_editor):
    pass


def update_scheduled_op_workflow_field(apps, schema_editor):
    """Traverse scheduled ops and assign value to workflow."""

    ScheduledOperation = apps.get_model('ontask', 'ScheduledOperation')
    for sch_item in ScheduledOperation.objects.all():
        sch_item.workflow = sch_item.action.workflow
        sch_item.save()


class Migration(migrations.Migration):

    replaces = [('ontask', '0001_oauth_initial'), ('ontask', '0002_Version_6_UPGRADE'), ('ontask', '0003_transfer_siteprefs'), ('ontask', '0004_remove_old_migration_refs'), ('ontask', '0005_auto_20190824_1543'), ('ontask', '0006_auto_20190824_1748'), ('ontask', '0007_auto_20190825_1810'), ('ontask', '0008_auto_20190826_1830'), ('ontask', '0009_auto_20190827_0745'), ('ontask', '0010_auto_20190828_1552'), ('ontask', '0011_refresh_query_builder_ops'), ('ontask', '0012_condition_formula_txt'), ('ontask', '0013_auto_20190831_2121'), ('ontask', '0014_auto_20190902_1721'), ('ontask', '0015_auto_20190902_1827'), ('ontask', '0016_scheduledaction_execute_until'), ('ontask', '0017_auto_20190908_1540'), ('ontask', '0018_auto_20190908_1614'), ('ontask', '0019_auto_20190909_0747'), ('ontask', '0020_rubriccell'), ('ontask', '0021_auto_20190911_1617'), ('ontask', '0022_auto_20190911_1618'), ('ontask', '0023_auto_20190911_1819'), ('ontask', '0024_auto_20190911_1830'), ('ontask', '0025_auto_20190914_1604'), ('ontask', '0026_auto_20190921_1853'), ('ontask', '0027_auto_20190921_1909'), ('ontask', '0028_actioncolumnconditiontuple_changes_allowed'), ('ontask', '0029_athenaconnection'), ('ontask', '0030_auto_20190928_2028'), ('ontask', '0031_remove_athenaconnection_table'), ('ontask', '0032_auto_20190930_1934'), ('ontask', '0033_athenaconnection_table_name'), ('ontask', '0034_auto_20191001_1118'), ('ontask', '0035_auto_20191002_0807'), ('ontask', '0036_remove_sqlconnection_db_password'), ('ontask', '0037_auto_20191002_0811'), ('ontask', '0038_auto_20191002_1041'), ('ontask', '0039_auto_20191002_1046'), ('ontask', '0040_auto_20191004_0838'), ('ontask', '0041_auto_20191004_2014'), ('ontask', '0042_auto_20191004_2014'), ('ontask', '0043_auto_20191006_1640'), ('ontask', '0044_auto_20191006_1814'), ('ontask', '0045_auto_20191007_2040'), ('ontask', '0046_auto_20191007_2057'), ('ontask', '0047_auto_20191007_2118'), ('ontask', '0048_auto_20191016_2328'), ('ontask', '0049_auto_20191024_0957'), ('ontask', '0050_auto_20191024_1002'), ('ontask', '0051_auto_20191024_1007'), ('ontask', '0052_auto_20191024_1012'), ('ontask', '0053_auto_20191024_1013'), ('ontask', '0054_auto_20191024_1016'), ('ontask', '0055_auto_20191026_1928'), ('ontask', '0056_auto_20191026_2032'), ('ontask', '0057_auto_20191026_2049'), ('ontask', '0058_auto_20191027_1252'), ('ontask', '0059_auto_20191027_1740'), ('ontask', '0060_auto_20191027_1809'), ('ontask', '0061_auto_20191104_1940'), ('ontask', '0062_auto_20191110_0947'), ('ontask', '0063_auto_20191111_2113'), ('ontask', '0064_auto_20191123_0850'), ('ontask', '0065_auto_20191201_1208')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('siteprefs', '0001_initial'),
        ('ontask', '0005_auto_20190430_1922'),
        ('ontask', '0004_plugin_is_enabled'),
        ('ontask', '0021_auto_20190609_1325'),
        ('ontask', '0002_auto_20190521_1710'),
        ('ontask', '0030_workflow_star'),
        ('ontask', '0002_auto_20190524_1639'),
    ]

    operations = [
        migrations.CreateModel(
            name='OAuthUserToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_name', models.CharField(max_length=2048)),
                ('access_token', models.CharField(max_length=2048)),
                ('refresh_token', models.CharField(blank=True, max_length=2048)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('valid_until', models.DateTimeField(default=None, verbose_name='Token valid until')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'instance_name')},
            },
        ),
        migrations.RunPython(code=copy_table_content),
        migrations.RunPython(code=copy_site_preferences),
        migrations.RunPython(code=remove_old_migration_refs),
        migrations.RenameField(
            model_name='sqlconnection',
            old_name='description_txt',
            new_name='description_text',
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='description_txt',
        ),
        migrations.AddField(
            model_name='plugin',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048),
        ),
        migrations.AlterField(
            model_name='action',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='condition',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='plugin',
            name='name',
            field=models.CharField(max_length=512),
        ),
        migrations.AlterField(
            model_name='scheduledaction',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='view',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048),
        ),
        migrations.AlterField(
            model_name='action',
            name='action_type',
            field=models.CharField(choices=[('personalized_text', 'Personalized text'), ('personalized_canvas_email', 'Personalized Canvas Email'), ('survey', 'Survey'), ('personalized_json', 'Personalized JSON'), ('send_list', 'Send List'), ('todo_list', 'TODO List')], default='personalized_text', max_length=64),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('workflow_create', 'Workflow created'), ('workflow_update', 'Workflow updated'), ('workflow_delete', 'Workflow deleted'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_data_merge', 'Data merged into workflow'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_import', 'Import workflow'), ('workflow_clone', 'Workflow cloned'), ('workflow_update_lusers', 'Update list of workflow users'), ('workflow_star', 'Toggle workflow star'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_rename', 'Column renamed'), ('column_delete', 'Column deleted'), ('column_clone', 'Column cloned'), ('column_restrict', 'Column restricted'), ('action_create', 'Action created'), ('action_update', 'Action updated'), ('action_delete', 'Action deleted'), ('action_clone', 'Action cloned'), ('action_email_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('action_canvas_email_sent', 'Canvas Emails sent'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('condition_create', 'Condition created'), ('condition_update', 'Condition updated'), ('condition_delete', 'Condition deleted'), ('condition_clone', 'Condition cloned'), ('tablerow_update', 'Table row updated'), ('tablerow_create', 'Table row created'), ('survey_input', 'Survey data input'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('filter_create', 'Filter created'), ('filter_update', 'Filter updated'), ('filter_delete', 'Filter deleted'), ('plugin_create', 'Plugin created'), ('plugin_update', 'Plugin updated'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_execute', 'Execute scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('download_zip_action', 'Download a ZIP with personalized text'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_json_execute', 'Execute scheduled JSON action')], max_length=256),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('workflow_create', 'Workflow created'), ('workflow_update', 'Workflow updated'), ('workflow_delete', 'Workflow deleted'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_data_merge', 'Data merged into workflow'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_import', 'Import workflow'), ('workflow_clone', 'Workflow cloned'), ('workflow_update_lusers', 'Update list of workflow users'), ('workflow_star', 'Toggle workflow star'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_rename', 'Column renamed'), ('column_delete', 'Column deleted'), ('column_clone', 'Column cloned'), ('column_restrict', 'Column restricted'), ('action_create', 'Action created'), ('action_update', 'Action updated'), ('action_delete', 'Action deleted'), ('action_clone', 'Action cloned'), ('action_email_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('action_canvas_email_sent', 'Canvas Emails sent'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('condition_create', 'Condition created'), ('condition_update', 'Condition updated'), ('condition_delete', 'Condition deleted'), ('condition_clone', 'Condition cloned'), ('tablerow_update', 'Table row updated'), ('tablerow_create', 'Table row created'), ('survey_input', 'Survey data input'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('filter_create', 'Filter created'), ('filter_update', 'Filter updated'), ('filter_delete', 'Filter deleted'), ('plugin_create', 'Plugin created'), ('plugin_update', 'Plugin updated'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_execute', 'Execute scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('download_zip_action', 'Download a ZIP with personalized text'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_json_execute', 'Execute scheduled JSON action')], max_length=256),
        ),
        migrations.AlterField(
            model_name='action',
            name='action_type',
            field=models.CharField(choices=[('personalized_text', 'Personalized text'), ('personalized_canvas_email', 'Personalized Canvas Email'), ('survey', 'Survey'), ('personalized_json', 'Personalized JSON'), ('send_list', 'Send List'), ('send_list_json', 'Send List as JSON'), ('todo_list', 'TODO List')], default='personalized_text', max_length=64),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('workflow_create', 'Workflow created'), ('workflow_update', 'Workflow updated'), ('workflow_delete', 'Workflow deleted'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_data_merge', 'Data merged into workflow'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_import', 'Import workflow'), ('workflow_clone', 'Workflow cloned'), ('workflow_update_lusers', 'Update list of workflow users'), ('workflow_star', 'Toggle workflow star'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_rename', 'Column renamed'), ('column_delete', 'Column deleted'), ('column_clone', 'Column cloned'), ('column_restrict', 'Column restricted'), ('action_create', 'Action created'), ('action_update', 'Action updated'), ('action_delete', 'Action deleted'), ('action_clone', 'Action cloned'), ('action_email_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('action_canvas_email_sent', 'Canvas Emails sent'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('condition_create', 'Condition created'), ('condition_update', 'Condition updated'), ('condition_delete', 'Condition deleted'), ('condition_clone', 'Condition cloned'), ('tablerow_update', 'Table row updated'), ('tablerow_create', 'Table row created'), ('survey_input', 'Survey data input'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('filter_create', 'Filter created'), ('filter_update', 'Filter updated'), ('filter_delete', 'Filter deleted'), ('plugin_create', 'Plugin created'), ('plugin_update', 'Plugin updated'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_execute', 'Execute scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('download_zip_action', 'Download a ZIP with personalized text'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_json_execute', 'Execute scheduled JSON action')], max_length=256),
        ),
        migrations.RunPython(code=refresh_query_builder_ops),
        migrations.RunPython(code=refresh_condition_boolean),
        migrations.AddField(
            model_name='condition',
            name='formula_text',
            field=models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='formula text'),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='shared',
            field=models.ManyToManyField(blank=True, related_name='workflows_shared', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='luser_email_column',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='luser_email_column', to='ontask.Column'),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='lusers',
            field=models.ManyToManyField(blank=True, default=None, related_name='workflows_luser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='star',
            field=models.ManyToManyField(blank=True, related_name='workflows_star', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scheduledaction',
            name='execute_until',
            field=models.DateTimeField(blank=True, null=True, verbose_name='End of execution period (if executing multiple times)'),
        ),
        migrations.AlterField(
            model_name='action',
            name='action_type',
            field=models.CharField(choices=[('personalized_text', 'Personalized text'), ('personalized_canvas_email', 'Personalized Canvas Email'), ('survey', 'Survey'), ('personalized_json', 'Personalized JSON'), ('rubric_text', 'Rubric feedback'), ('send_list', 'Send List'), ('send_list_json', 'Send List as JSON'), ('todo_list', 'TODO List')], default='personalized_text', max_length=64),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('workflow_create', 'Workflow created'), ('workflow_update', 'Workflow updated'), ('workflow_delete', 'Workflow deleted'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_data_merge', 'Data merged into workflow'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_import', 'Import workflow'), ('workflow_clone', 'Workflow cloned'), ('workflow_update_lusers', 'Update list of workflow users'), ('workflow_star', 'Toggle workflow star'), ('question_add', 'Question added'), ('criterion_add', 'Criterion added'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_rename', 'Column renamed'), ('column_delete', 'Column deleted'), ('column_clone', 'Column cloned'), ('column_restrict', 'Column restricted'), ('action_create', 'Action created'), ('action_update', 'Action updated'), ('action_delete', 'Action deleted'), ('action_clone', 'Action cloned'), ('action_email_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('action_canvas_email_sent', 'Canvas Emails sent'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('condition_create', 'Condition created'), ('condition_update', 'Condition updated'), ('condition_delete', 'Condition deleted'), ('condition_clone', 'Condition cloned'), ('tablerow_update', 'Table row updated'), ('tablerow_create', 'Table row created'), ('survey_input', 'Survey data input'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('filter_create', 'Filter created'), ('filter_update', 'Filter updated'), ('filter_delete', 'Filter deleted'), ('plugin_create', 'Plugin created'), ('plugin_update', 'Plugin updated'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_execute', 'Execute scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('download_zip_action', 'Download a ZIP with personalized text'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_json_execute', 'Execute scheduled JSON action')], max_length=256),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('workflow_create', 'Workflow created'), ('workflow_update', 'Workflow updated'), ('workflow_delete', 'Workflow deleted'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_data_merge', 'Data merged into workflow'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_import', 'Import workflow'), ('workflow_clone', 'Workflow cloned'), ('workflow_update_lusers', 'Update list of workflow users'), ('workflow_star', 'Toggle workflow star'), ('question_add', 'Question added'), ('criterion_add', 'Criterion added'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_rename', 'Column renamed'), ('column_delete', 'Column deleted'), ('column_clone', 'Column cloned'), ('column_restrict', 'Column restricted'), ('action_create', 'Action created'), ('action_update', 'Action updated'), ('action_delete', 'Action deleted'), ('action_clone', 'Action cloned'), ('action_email_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('action_canvas_email_sent', 'Canvas Emails sent'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('condition_create', 'Condition created'), ('condition_update', 'Condition updated'), ('condition_delete', 'Condition deleted'), ('condition_clone', 'Condition cloned'), ('tablerow_update', 'Table row updated'), ('tablerow_create', 'Table row created'), ('survey_input', 'Survey data input'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('filter_create', 'Filter created'), ('filter_update', 'Filter updated'), ('filter_delete', 'Filter deleted'), ('plugin_create', 'Plugin created'), ('plugin_update', 'Plugin updated'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_execute', 'Execute scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('download_zip_action', 'Download a ZIP with personalized text'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_json_execute', 'Execute scheduled JSON action')], max_length=256),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('workflow_create', 'Workflow created'), ('workflow_update', 'Workflow updated'), ('workflow_delete', 'Workflow deleted'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_data_merge', 'Data merged into workflow'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_import', 'Import workflow'), ('workflow_clone', 'Workflow cloned'), ('workflow_update_lusers', 'Update list of workflow users'), ('workflow_star', 'Toggle workflow star'), ('question_add', 'Question added'), ('criterion_create', 'Criterion created'), ('criterion_delete', 'Criterion deleted'), ('criterion_insert', 'Criterion insert'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_rename', 'Column renamed'), ('column_delete', 'Column deleted'), ('column_clone', 'Column cloned'), ('column_restrict', 'Column restricted'), ('action_create', 'Action created'), ('action_update', 'Action updated'), ('action_delete', 'Action deleted'), ('action_clone', 'Action cloned'), ('action_email_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('action_canvas_email_sent', 'Canvas Emails sent'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('condition_create', 'Condition created'), ('condition_update', 'Condition updated'), ('condition_delete', 'Condition deleted'), ('condition_clone', 'Condition cloned'), ('tablerow_update', 'Table row updated'), ('tablerow_create', 'Table row created'), ('survey_input', 'Survey data input'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('filter_create', 'Filter created'), ('filter_update', 'Filter updated'), ('filter_delete', 'Filter deleted'), ('plugin_create', 'Plugin created'), ('plugin_update', 'Plugin updated'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_execute', 'Execute scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('download_zip_action', 'Download a ZIP with personalized text'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_json_execute', 'Execute scheduled JSON action')], max_length=256),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('workflow_create', 'Workflow created'), ('workflow_update', 'Workflow updated'), ('workflow_delete', 'Workflow deleted'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_data_merge', 'Data merged into workflow'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_import', 'Import workflow'), ('workflow_clone', 'Workflow cloned'), ('workflow_update_lusers', 'Update list of workflow users'), ('workflow_star', 'Toggle workflow star'), ('question_add', 'Question added'), ('criterion_create', 'Criterion created'), ('criterion_add', 'Criterion added'), ('criterion_delete', 'Criterion deleted'), ('criterion_insert', 'Criterion insert'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_rename', 'Column renamed'), ('column_delete', 'Column deleted'), ('column_clone', 'Column cloned'), ('column_restrict', 'Column restricted'), ('action_create', 'Action created'), ('action_update', 'Action updated'), ('action_delete', 'Action deleted'), ('action_clone', 'Action cloned'), ('action_email_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('action_canvas_email_sent', 'Canvas Emails sent'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('condition_create', 'Condition created'), ('condition_update', 'Condition updated'), ('condition_delete', 'Condition deleted'), ('condition_clone', 'Condition cloned'), ('tablerow_update', 'Table row updated'), ('tablerow_create', 'Table row created'), ('survey_input', 'Survey data input'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('filter_create', 'Filter created'), ('filter_update', 'Filter updated'), ('filter_delete', 'Filter deleted'), ('plugin_create', 'Plugin created'), ('plugin_update', 'Plugin updated'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_execute', 'Execute scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('download_zip_action', 'Download a ZIP with personalized text'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_json_execute', 'Execute scheduled JSON action')], max_length=256),
        ),
        migrations.CreateModel(
            name='RubricCell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_text', models.TextField(blank=True, default='', verbose_name='description')),
                ('feedback_text', models.TextField(blank=True, default='', verbose_name='feedback')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubric_cells', to='ontask.Action')),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubric_cells', to='ontask.Column')),
                ('loa_position', models.IntegerField(default=0, verbose_name='level of attainment')),
            ],
            options={
                'ordering': ['column__position', 'loa_position'],
                'unique_together': {('action', 'column', 'loa_position')},
            },
        ),
        migrations.AddField(
            model_name='actioncolumnconditiontuple',
            name='changes_allowed',
            field=models.BooleanField(default=True, verbose_name='Allow changes?'),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('workflow_create', 'Workflow created'), ('workflow_update', 'Workflow updated'), ('workflow_delete', 'Workflow deleted'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_data_merge', 'Data merged into workflow'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_import', 'Import workflow'), ('workflow_clone', 'Workflow cloned'), ('workflow_update_lusers', 'Update list of workflow users'), ('workflow_star', 'Toggle workflow star'), ('question_add', 'Question added'), ('criterion_create', 'Criterion created'), ('criterion_add', 'Criterion added'), ('criterion_delete', 'Criterion deleted'), ('criterion_insert', 'Criterion insert'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_rename', 'Column renamed'), ('column_delete', 'Column deleted'), ('column_clone', 'Column cloned'), ('column_restrict', 'Column restricted'), ('action_create', 'Action created'), ('action_update', 'Action updated'), ('action_delete', 'Action deleted'), ('action_clone', 'Action cloned'), ('action_email_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('action_canvas_email_sent', 'Canvas Emails sent'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('condition_create', 'Condition created'), ('condition_update', 'Condition updated'), ('condition_delete', 'Condition deleted'), ('condition_clone', 'Condition cloned'), ('tablerow_update', 'Table row updated'), ('tablerow_create', 'Table row created'), ('survey_input', 'Survey data input'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('filter_create', 'Filter created'), ('filter_update', 'Filter updated'), ('filter_delete', 'Filter deleted'), ('plugin_create', 'Plugin created'), ('plugin_update', 'Plugin updated'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('athena_connection_create', 'ATHENA connection created'), ('athena_connection_edit', 'ATHENA connection updated'), ('athena_connection_delete', 'ATHENA connection deleted'), ('athena_connection_clone', 'ATHENA connection cloned'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_execute', 'Execute scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('download_zip_action', 'Download a ZIP with personalized text'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_json_execute', 'Execute scheduled JSON action')], max_length=256),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('action_canvas_email_sent', 'Canvas Emails sent'), ('action_clone', 'Action cloned'), ('action_create', 'Action created'), ('action_delete', 'Action deleted'), ('download_zip_action', 'Download a ZIP with one file per text'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_email_sent', 'Emails sent'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('question_add', 'Question added'), ('question_toggle_changes', 'Question toggle changes'), ('action_rubric_criterion_add', 'Add a rubric criterion'), ('action_rubric_criterion_edit', 'Edit rubric criterion'), ('action_rubric_criterion_delete', 'Delete rubric criterion'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_run_canvas_email', 'Execute scheduled canvas email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_json_execute', 'Execute scheduled JSON action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('survey_input', 'Survey data input'), ('action_update', 'Action updated'), ('athena_connection_clone', 'ATHENA connection cloned'), ('athena_connection_create', 'ATHENA connection created'), ('athena_connection_delete', 'ATHENA connection deleted'), ('athena_connection_edit', 'ATHENA connection updated'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_clone', 'Column cloned'), ('column_delete', 'Column deleted'), ('column_edit', 'Column edited'), ('column_restrict', 'Column restricted'), ('condition_clone', 'Condition cloned'), ('condition_create', 'Condition created'), ('condition_delete', 'Condition deleted'), ('condition_update', 'Condition updated'), ('plugin_create', 'Plugin created'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('plugin_update', 'Plugin updated'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_clone', 'Workflow cloned'), ('workflow_create', 'Workflow created'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_data_merge', 'Data merged into workflow'), ('tablerow_create', 'Table row created'), ('tablerow_update', 'Table row updated'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_delete', 'Workflow deleted'), ('workflow_import', 'Import workflow'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_star', 'Toggle workflow star'), ('workflow_update', 'Workflow updated'), ('workflow_update_lusers', 'Update list of workflow users')], max_length=256),
        ),
        migrations.AlterField(
            model_name='sqlconnection',
            name='db_table',
            field=models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='Table'),
        ),
        migrations.RemoveField(
            model_name='sqlconnection',
            name='db_password',
        ),
        migrations.AlterField(
            model_name='sqlconnection',
            name='db_name',
            field=models.CharField(default='', max_length=2048, verbose_name='Database name'),
        ),
        migrations.AlterField(
            model_name='sqlconnection',
            name='db_table',
            field=models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='Database table'),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('action_canvas_email_sent', 'Canvas Emails sent'), ('action_clone', 'Action cloned'), ('action_create', 'Action created'), ('action_delete', 'Action deleted'), ('download_zip_action', 'Download a ZIP with one file per text'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_email_sent', 'Emails sent'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('question_add', 'Question added'), ('question_toggle_changes', 'Question toggle changes'), ('action_rubric_criterion_add', 'Add a rubric criterion'), ('action_rubric_criterion_edit', 'Edit rubric criterion'), ('action_rubric_criterion_delete', 'Delete rubric criterion'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_run_canvas_email', 'Execute scheduled canvas email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_json_execute', 'Execute scheduled JSON action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('survey_input', 'Survey data input'), ('action_update', 'Action updated'), ('athena_connection_clone', 'Athena connection cloned'), ('athena_connection_create', 'Athena connection created'), ('athena_connection_delete', 'Athena connection deleted'), ('athena_connection_edit', 'Athena connection updated'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_clone', 'Column cloned'), ('column_delete', 'Column deleted'), ('column_edit', 'Column edited'), ('column_restrict', 'Column restricted'), ('condition_clone', 'Condition cloned'), ('condition_create', 'Condition created'), ('condition_delete', 'Condition deleted'), ('condition_update', 'Condition updated'), ('plugin_create', 'Plugin created'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('plugin_update', 'Plugin updated'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_clone', 'SQL connection cloned'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_clone', 'Workflow cloned'), ('workflow_create', 'Workflow created'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_data_merge', 'Data merged into workflow'), ('tablerow_create', 'Table row created'), ('tablerow_update', 'Table row updated'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_delete', 'Workflow deleted'), ('workflow_import', 'Import workflow'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_star', 'Toggle workflow star'), ('workflow_update', 'Workflow updated'), ('workflow_update_lusers', 'Update list of workflow users')], max_length=256),
        ),
        migrations.AddField(
            model_name='sqlconnection',
            name='db_password',
            field=fernet_fields.fields.EncryptedCharField(blank=True, default='', help_text='Leave empty to enter at execution', max_length=2048, null=True, verbose_name='Password'),
        ),
        migrations.CreateModel(
            name='AthenaConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048, unique=True, verbose_name='Name')),
                ('description_text', models.CharField(blank=True, default='', max_length=2048, verbose_name='Description')),
                ('aws_access_key', models.CharField(default='', max_length=512, verbose_name='AWS access key')),
                ('aws_secret_access_key', fernet_fields.fields.EncryptedCharField(blank=True, default='', help_text='Leave blank to provide at execution', max_length=512, null=True, verbose_name='AWS secret access key')),
                ('aws_bucket_name', models.CharField(default='', max_length=512, verbose_name='AWS S3 Bucket name (no s3:// prefix)')),
                ('aws_file_path', models.CharField(blank=True, default='', max_length=512, null=True, verbose_name='AWS S3 Bucket file path')),
                ('aws_region_name', models.CharField(default='', max_length=512, verbose_name='AWS region name')),
                ('table_name', models.CharField(blank=True, default='', help_text='Leave blank to provide at execution', max_length=512, null=True, verbose_name='Table name')),
                ('aws_session_token', fernet_fields.fields.EncryptedTextField(blank=True, default='', help_text='Leave blank to provide at execution', null=True, verbose_name='AWS session token')),
                ('enabled', models.BooleanField(default=False, verbose_name='Available to users?')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='sqlconnection',
            name='enabled',
            field=models.BooleanField(default=False, verbose_name='Available to users?'),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('action_canvas_email_sent', 'Canvas Emails sent'), ('action_clone', 'Action cloned'), ('action_create', 'Action created'), ('action_delete', 'Action deleted'), ('download_zip_action', 'Download a ZIP with one file per text'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_email_sent', 'Emails sent'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('question_add', 'Question added'), ('question_toggle_changes', 'Question toggle changes'), ('action_rubric_criterion_add', 'Add a rubric criterion'), ('action_rubric_criterion_edit', 'Edit rubric criterion'), ('action_rubric_criterion_delete', 'Delete rubric criterion'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_run_canvas_email', 'Execute scheduled canvas email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_json_execute', 'Execute scheduled JSON action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('survey_input', 'Survey data input'), ('action_update', 'Action updated'), ('athena_connection_clone', 'Athena connection cloned'), ('athena_connection_create', 'Athena connection created'), ('athena_connection_delete', 'Athena connection deleted'), ('athena_connection_edit', 'Athena connection updated'), ('athena_connection_toggle', 'SQL connection toggled'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_clone', 'Column cloned'), ('column_delete', 'Column deleted'), ('column_edit', 'Column edited'), ('column_restrict', 'Column restricted'), ('condition_clone', 'Condition cloned'), ('condition_create', 'Condition created'), ('condition_delete', 'Condition deleted'), ('condition_update', 'Condition updated'), ('plugin_create', 'Plugin created'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('plugin_update', 'Plugin updated'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('sql_connection_clone', 'SQL connection cloned'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_toggle', 'SQL connection toggled'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_clone', 'Workflow cloned'), ('workflow_create', 'Workflow created'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_data_merge', 'Data merged into workflow'), ('tablerow_create', 'Table row created'), ('tablerow_update', 'Table row updated'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_delete', 'Workflow deleted'), ('workflow_import', 'Import workflow'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_star', 'Toggle workflow star'), ('workflow_update', 'Workflow updated'), ('workflow_update_lusers', 'Update list of workflow users')], max_length=256),
        ),
        migrations.AddField(
            model_name='scheduledaction',
            name='operation_type',
            field=models.CharField(choices=[('action_run', 'Run action')], default='action_run', max_length=512),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='scheduledaction',
            name='workflow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_actions', to='ontask.Workflow'),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('action_canvas_email_sent', 'Canvas Emails sent'), ('action_clone', 'Action cloned'), ('action_create', 'Action created'), ('action_delete', 'Action deleted'), ('download_zip_action', 'Download a ZIP with one file per text'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_email_sent', 'Emails sent'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('question_add', 'Question added'), ('question_toggle_changes', 'Question toggle changes'), ('action_rubric_criterion_add', 'Add a rubric criterion'), ('action_rubric_criterion_edit', 'Edit rubric criterion'), ('action_rubric_criterion_delete', 'Delete rubric criterion'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_run_canvas_email', 'Execute scheduled canvas email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_json_execute', 'Execute scheduled JSON action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('survey_input', 'Survey data input'), ('action_update', 'Action updated'), ('athena_connection_clone', 'Athena connection cloned'), ('athena_connection_create', 'Athena connection created'), ('athena_connection_delete', 'Athena connection deleted'), ('athena_connection_edit', 'Athena connection updated'), ('athena_connection_toggle', 'SQL connection toggled'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_clone', 'Column cloned'), ('column_delete', 'Column deleted'), ('column_edit', 'Column edited'), ('column_restrict', 'Column restricted'), ('condition_clone', 'Condition cloned'), ('condition_create', 'Condition created'), ('condition_delete', 'Condition deleted'), ('condition_update', 'Condition updated'), ('plugin_create', 'Plugin created'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('plugin_update', 'Plugin updated'), ('schedule_canvas_email_edit', 'Edit scheduled canvas email action'), ('schedule_canvas_email_delete', 'Delete scheduled canvas email action'), ('schedule_email_edit', 'Edit scheduled email action'), ('schedule_email_delete', 'Delete scheduled email action'), ('schedule_json_edit', 'Edit scheduled JSON action'), ('schedule_json_delete', 'Delete scheduled JSON action'), ('schedule_send_list_edit', 'Edit scheduled JSON list action'), ('schedule_send_list_delete', 'Delete scheduled JSON list action'), ('schedule_send_list_edit', 'Edit scheduled send list action'), ('schedule_send_list_delete', 'Delete scheduled send list action'), ('sql_connection_clone', 'SQL connection cloned'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_toggle', 'SQL connection toggled'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_clone', 'Workflow cloned'), ('workflow_create', 'Workflow created'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_data_merge', 'Data merged into workflow'), ('tablerow_create', 'Table row created'), ('tablerow_update', 'Table row updated'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_delete', 'Workflow deleted'), ('workflow_import', 'Import workflow'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_star', 'Toggle workflow star'), ('workflow_update', 'Workflow updated'), ('workflow_update_lusers', 'Update list of workflow users')], max_length=512),
        ),
        migrations.AlterField(
            model_name='scheduledaction',
            name='action',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_actions', to='ontask.Action'),
        ),
        migrations.RenameModel(
            old_name='ScheduledAction',
            new_name='ScheduledOperation',
        ),
        migrations.RunPython(
            trim_column_names,
            reverse_code=reverse_migration),
        migrations.AlterField(
            model_name='column',
            name='name',
            field=models.CharField(max_length=63, verbose_name='column name'),
        ),
        migrations.AlterField(
            model_name='column',
            name='name',
            field=models.CharField(max_length=512, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='condition',
            name='name',
            field=models.CharField(max_length=512, verbose_name='name'),
        ),
        migrations.AddField(
            model_name='plugin',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='athenaconnection',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='athenaconnection',
            name='name',
            field=models.CharField(max_length=512, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='plugin',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='plugin',
            name='name',
            field=models.CharField(max_length=512, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='sqlconnection',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='sqlconnection',
            name='name',
            field=models.CharField(max_length=512, verbose_name='name'),
        ),
        migrations.AddField(
            model_name='scheduledoperation',
            name='modified',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='scheduledoperation',
            name='name',
            field=models.CharField(max_length=512, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='view',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='view',
            name='name',
            field=models.CharField(max_length=512, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='description_text',
            field=models.CharField(blank=True, default='', max_length=2048, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='name',
            field=models.CharField(max_length=512, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('action_canvas_email_sent', 'Canvas Emails sent'), ('action_clone', 'Action cloned'), ('action_create', 'Action created'), ('action_delete', 'Action deleted'), ('download_zip_action', 'Download a ZIP with one file per text'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_email_sent', 'Emails sent'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('question_add', 'Question added'), ('question_toggle_changes', 'Question toggle changes'), ('action_rubric_criterion_add', 'Add a rubric criterion'), ('action_rubric_criterion_edit', 'Edit rubric criterion'), ('action_rubric_criterion_delete', 'Delete rubric criterion'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_run_canvas_email', 'Execute scheduled canvas email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_json_execute', 'Execute scheduled JSON action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('survey_input', 'Survey data input'), ('action_update', 'Action updated'), ('athena_connection_clone', 'Athena connection cloned'), ('athena_connection_create', 'Athena connection created'), ('athena_connection_delete', 'Athena connection deleted'), ('athena_connection_edit', 'Athena connection updated'), ('athena_connection_toggle', 'SQL connection toggled'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_clone', 'Column cloned'), ('column_delete', 'Column deleted'), ('column_edit', 'Column edited'), ('column_restrict', 'Column restricted'), ('condition_clone', 'Condition cloned'), ('condition_create', 'Condition created'), ('condition_delete', 'Condition deleted'), ('condition_update', 'Condition updated'), ('plugin_create', 'Plugin created'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('plugin_update', 'Plugin updated'), ('schedule_create', 'Create scheduled operation'), ('schedule_edit', 'Edit scheduled operation'), ('schedule_delete', 'Delete scheduled operation'), ('sql_connection_clone', 'SQL connection cloned'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_toggle', 'SQL connection toggled'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_clone', 'Workflow cloned'), ('workflow_create', 'Workflow created'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_data_merge', 'Data merged into workflow'), ('tablerow_create', 'Table row created'), ('tablerow_update', 'Table row updated'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_delete', 'Workflow deleted'), ('workflow_import', 'Import workflow'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_star', 'Toggle workflow star'), ('workflow_update', 'Workflow updated'), ('workflow_update_lusers', 'Update list of workflow users')], max_length=512),
        ),
        migrations.AlterField(
            model_name='scheduledoperation',
            name='operation_type',
            field=models.CharField(choices=[('action_email_run', 'Run personalized email action')], max_length=512),
        ),
        migrations.AlterField(
            model_name='column',
            name='name',
            field=models.CharField(max_length=63, verbose_name='column name'),
        ),
        migrations.AlterField(
            model_name='column',
            name='name',
            field=models.CharField(max_length=512, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='condition',
            name='name',
            field=models.CharField(blank=True, max_length=512, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='scheduledoperation',
            name='operation_type',
            field=models.CharField(choices=[('run_action', 'Run action')], max_length=512),
        ),
        migrations.AlterField(
            model_name='scheduledoperation',
            name='action',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_operations', to='ontask.Action'),
        ),
        migrations.AlterField(
            model_name='scheduledoperation',
            name='workflow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_operations', to='ontask.Workflow'),
        ),
        migrations.RunPython(update_scheduled_op_workflow_field),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('action_canvas_email_sent', 'Canvas Emails sent'), ('action_clone', 'Action cloned'), ('action_create', 'Action created'), ('action_delete', 'Action deleted'), ('download_zip_action', 'Download a ZIP with one file per text'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_email_sent', 'Emails sent'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('question_add', 'Question added'), ('question_toggle_changes', 'Question toggle changes'), ('action_rubric_criterion_add', 'Add a rubric criterion'), ('action_rubric_criterion_edit', 'Edit rubric criterion'), ('action_rubric_criterion_delete', 'Delete rubric criterion'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_run_canvas_email', 'Execute scheduled canvas email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_json_execute', 'Execute scheduled JSON action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('zip_messages_execute', 'Create a zip with personalized content'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('survey_input', 'Survey data input'), ('action_update', 'Action updated'), ('athena_connection_clone', 'Athena connection cloned'), ('athena_connection_create', 'Athena connection created'), ('athena_connection_delete', 'Athena connection deleted'), ('athena_connection_edit', 'Athena connection updated'), ('athena_connection_toggle', 'SQL connection toggled'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_clone', 'Column cloned'), ('column_delete', 'Column deleted'), ('column_edit', 'Column edited'), ('column_restrict', 'Column restricted'), ('condition_clone', 'Condition cloned'), ('condition_create', 'Condition created'), ('condition_delete', 'Condition deleted'), ('condition_update', 'Condition updated'), ('plugin_create', 'Plugin created'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('plugin_update', 'Plugin updated'), ('schedule_create', 'Create scheduled operation'), ('schedule_edit', 'Edit scheduled operation'), ('schedule_delete', 'Delete scheduled operation'), ('sql_connection_clone', 'SQL connection cloned'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_toggle', 'SQL connection toggled'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_clone', 'Workflow cloned'), ('workflow_create', 'Workflow created'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_data_merge', 'Data merged into workflow'), ('tablerow_create', 'Table row created'), ('tablerow_update', 'Table row updated'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_delete', 'Workflow deleted'), ('workflow_import', 'Import workflow'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_star', 'Toggle workflow star'), ('workflow_update', 'Workflow updated'), ('workflow_update_lusers', 'Update list of workflow users')], max_length=512),
        ),
        migrations.AlterField(
            model_name='scheduledoperation',
            name='operation_type',
            field=models.CharField(choices=[('run_action_personalized_text', 'Run personalized text action'), ('run_action_personalized_json', 'Run personalized JSON action'), ('run_action_send_list', 'Run send list action'), ('run_action_send_list_json', 'Run send JSON list action'), ('run_action_rubric_text', 'Run rubrict text action')], max_length=512),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('action_canvas_email_sent', 'Canvas Emails sent'), ('action_clone', 'Action cloned'), ('action_create', 'Action created'), ('action_delete', 'Action deleted'), ('download_zip_action', 'Download a ZIP with one file per text'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_email_sent', 'Emails sent'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('question_add', 'Question added'), ('question_toggle_changes', 'Question toggle changes'), ('action_rubric_criterion_add', 'Add a rubric criterion'), ('action_rubric_criterion_edit', 'Edit rubric criterion'), ('action_rubric_criterion_delete', 'Delete rubric criterion'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_run_canvas_email', 'Execute scheduled canvas email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_json_execute', 'Execute scheduled JSON action'), ('schedule_send_list_execute', 'Execute scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('zip_messages_execute', 'Create a zip with personalized content'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('survey_input', 'Survey data input'), ('action_update', 'Action updated'), ('athena_connection_clone', 'Athena connection cloned'), ('athena_connection_create', 'Athena connection created'), ('athena_connection_delete', 'Athena connection deleted'), ('athena_connection_edit', 'Athena connection updated'), ('athena_connection_toggle', 'SQL connection toggled'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_clone', 'Column cloned'), ('column_delete', 'Column deleted'), ('column_edit', 'Column edited'), ('column_restrict', 'Column restricted'), ('condition_clone', 'Condition cloned'), ('condition_create', 'Condition created'), ('condition_delete', 'Condition deleted'), ('condition_update', 'Condition updated'), ('plugin_create', 'Plugin created'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('plugin_update', 'Plugin updated'), ('schedule_create', 'Create scheduled operation'), ('schedule_edit', 'Edit scheduled operation'), ('schedule_delete', 'Delete scheduled operation'), ('sql_connection_clone', 'SQL connection cloned'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_toggle', 'SQL connection toggled'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_clone', 'Workflow cloned'), ('workflow_create', 'Workflow created'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_data_merge', 'Data merged into workflow'), ('tablerow_create', 'Table row created'), ('tablerow_update', 'Table row updated'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_delete', 'Workflow deleted'), ('workflow_import', 'Import workflow'), ('workflow_increase_track_count', 'Increase workflow track count.'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_star', 'Toggle workflow star'), ('workflow_update', 'Workflow updated'), ('workflow_update_lusers', 'Update list of workflow users')], max_length=512),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('action_clone', 'Action cloned'), ('action_create', 'Action created'), ('action_delete', 'Action deleted'), ('download_zip_action', 'Download a ZIP with one file per text'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_email_sent', 'Emails sent'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('question_add', 'Question added'), ('question_toggle_changes', 'Question toggle changes'), ('action_rubric_criterion_add', 'Add a rubric criterion'), ('action_rubric_criterion_edit', 'Edit rubric criterion'), ('action_rubric_criterion_delete', 'Delete rubric criterion'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_run_canvas_email', 'Execute scheduled canvas email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_json_execute', 'Execute scheduled JSON action'), ('schedule_json_list_execute', 'Execute scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('zip_messages_execute', 'Create a zip with personalized content'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('survey_input', 'Survey data input'), ('action_update', 'Action updated'), ('athena_connection_clone', 'Athena connection cloned'), ('athena_connection_create', 'Athena connection created'), ('athena_connection_delete', 'Athena connection deleted'), ('athena_connection_edit', 'Athena connection updated'), ('athena_connection_toggle', 'SQL connection toggled'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_clone', 'Column cloned'), ('column_delete', 'Column deleted'), ('column_edit', 'Column edited'), ('column_restrict', 'Column restricted'), ('condition_clone', 'Condition cloned'), ('condition_create', 'Condition created'), ('condition_delete', 'Condition deleted'), ('condition_update', 'Condition updated'), ('plugin_create', 'Plugin created'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('plugin_update', 'Plugin updated'), ('schedule_create', 'Create scheduled operation'), ('schedule_edit', 'Edit scheduled operation'), ('schedule_delete', 'Delete scheduled operation'), ('sql_connection_clone', 'SQL connection cloned'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_toggle', 'SQL connection toggled'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_clone', 'Workflow cloned'), ('workflow_create', 'Workflow created'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_data_merge', 'Data merged into workflow'), ('tablerow_create', 'Table row created'), ('tablerow_update', 'Table row updated'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_delete', 'Workflow deleted'), ('workflow_import', 'Import workflow'), ('workflow_increase_track_count', 'Increase workflow track count.'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_star', 'Toggle workflow star'), ('workflow_update', 'Workflow updated'), ('workflow_update_lusers', 'Update list of workflow users')], max_length=512),
        ),
        migrations.AlterField(
            model_name='action',
            name='name',
            field=models.CharField(max_length=1024, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='athenaconnection',
            name='aws_access_key',
            field=models.CharField(default='', max_length=1024, verbose_name='AWS access key'),
        ),
        migrations.AlterField(
            model_name='athenaconnection',
            name='aws_bucket_name',
            field=models.CharField(default='', max_length=1024, verbose_name='AWS S3 Bucket name (no s3:// prefix)'),
        ),
        migrations.AlterField(
            model_name='athenaconnection',
            name='aws_file_path',
            field=models.CharField(blank=True, default='', max_length=1024, null=True, verbose_name='AWS S3 Bucket file path'),
        ),
        migrations.AlterField(
            model_name='athenaconnection',
            name='aws_region_name',
            field=models.CharField(default='', max_length=1024, verbose_name='AWS region name'),
        ),
        migrations.AlterField(
            model_name='athenaconnection',
            name='aws_secret_access_key',
            field=fernet_fields.fields.EncryptedCharField(blank=True, default='', help_text='Leave blank to provide at execution', max_length=1024, null=True, verbose_name='AWS secret access key'),
        ),
        migrations.AlterField(
            model_name='athenaconnection',
            name='name',
            field=models.CharField(max_length=1024, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='athenaconnection',
            name='table_name',
            field=models.CharField(blank=True, default='', help_text='Leave blank to provide at execution', max_length=1024, null=True, verbose_name='Table name'),
        ),
        migrations.AlterField(
            model_name='column',
            name='data_type',
            field=models.CharField(choices=[('string', 'string'), ('integer', 'integer'), ('double', 'double'), ('boolean', 'boolean'), ('datetime', 'datetime')], max_length=1024, verbose_name='type of data to store in the column'),
        ),
        migrations.AlterField(
            model_name='column',
            name='name',
            field=models.CharField(max_length=1024, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='condition',
            name='name',
            field=models.CharField(blank=True, max_length=1024, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='log',
            name='name',
            field=models.CharField(choices=[('action_clone', 'Action cloned'), ('action_create', 'Action created'), ('action_delete', 'Action deleted'), ('download_zip_action', 'Download a ZIP with one file per text'), ('action_email_notify', 'Notification email sent'), ('action_email_read', 'Email read'), ('action_email_sent', 'Emails sent'), ('action_import', 'Action imported'), ('action_json_sent', 'Emails sent'), ('action_list_email_sent', 'Email with data list sent'), ('question_add', 'Question added'), ('question_toggle_changes', 'Question toggle changes'), ('action_rubric_criterion_add', 'Add a rubric criterion'), ('action_rubric_criterion_edit', 'Edit rubric criterion'), ('action_rubric_criterion_delete', 'Delete rubric criterion'), ('action_rubriccell_edit', 'Rubric cell edit'), ('action_rubric_loa_edit', 'Rubric level of attainment edit'), ('action_run_canvas_email', 'Execute scheduled canvas email action'), ('schedule_email_execute', 'Execute scheduled email action'), ('schedule_json_execute', 'Execute scheduled JSON action'), ('schedule_json_list_execute', 'Execute scheduled JSON list action'), ('schedule_send_list_execute', 'Execute scheduled send list action'), ('zip_messages_execute', 'Create a zip with personalized content'), ('action_serve_toggled', 'Action URL toggled'), ('action_served_execute', 'Action served'), ('survey_input', 'Survey data input'), ('action_update', 'Action updated'), ('athena_connection_clone', 'Athena connection cloned'), ('athena_connection_create', 'Athena connection created'), ('athena_connection_delete', 'Athena connection deleted'), ('athena_connection_edit', 'Athena connection updated'), ('athena_connection_toggle', 'SQL connection toggled'), ('column_add', 'Column added'), ('column_add_formula', 'Column with formula created'), ('column_add_random', 'Column with random values created'), ('column_clone', 'Column cloned'), ('column_delete', 'Column deleted'), ('column_edit', 'Column edited'), ('column_restrict', 'Column restricted'), ('condition_clone', 'Condition cloned'), ('condition_create', 'Condition created'), ('condition_delete', 'Condition deleted'), ('condition_update', 'Condition updated'), ('plugin_create', 'Plugin created'), ('plugin_delete', 'Plugin deleted'), ('plugin_execute', 'Plugin executed'), ('plugin_update', 'Plugin updated'), ('schedule_create', 'Create scheduled operation'), ('schedule_edit', 'Edit scheduled operation'), ('schedule_delete', 'Delete scheduled operation'), ('sql_connection_clone', 'SQL connection cloned'), ('sql_connection_create', 'SQL connection created'), ('sql_connection_delete', 'SQL connection deleted'), ('sql_connection_edit', 'SQL connection updated'), ('sql_connection_toggle', 'SQL connection toggled'), ('view_create', 'Table view created'), ('view_edit', 'Table view edited'), ('view_delete', 'Table view deleted'), ('view_clone', 'Table view cloned'), ('workflow_attribute_create', 'New attribute in workflow'), ('workflow_attribute_update', 'Attributes updated in workflow'), ('workflow_attribute_delete', 'Attribute deleted'), ('workflow_clone', 'Workflow cloned'), ('workflow_create', 'Workflow created'), ('workflow_data_failedmerge', 'Failed data merge into workflow'), ('workflow_data_flush', 'Workflow data flushed'), ('workflow_data_merge', 'Data merged into workflow'), ('tablerow_create', 'Table row created'), ('tablerow_update', 'Table row updated'), ('workflow_data_upload', 'Data uploaded to workflow'), ('workflow_delete', 'Workflow deleted'), ('workflow_import', 'Import workflow'), ('workflow_increase_track_count', 'Increase workflow track count.'), ('workflow_share_add', 'User share added'), ('workflow_share_delete', 'User share deleted'), ('workflow_star', 'Toggle workflow star'), ('workflow_update', 'Workflow updated'), ('workflow_update_lusers', 'Update list of workflow users')], max_length=1024),
        ),
        migrations.AlterField(
            model_name='plugin',
            name='name',
            field=models.CharField(max_length=1024, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='scheduledoperation',
            name='name',
            field=models.CharField(max_length=1024, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='scheduledoperation',
            name='operation_type',
            field=models.CharField(choices=[('run_action_personalized_text', 'Run personalized text action'), ('run_action_personalized_json', 'Run personalized JSON action'), ('run_action_send_list', 'Run send list action'), ('run_action_send_list_json', 'Run send JSON list action'), ('run_action_rubric_text', 'Run rubrict text action')], max_length=1024),
        ),
        migrations.AlterField(
            model_name='sqlconnection',
            name='name',
            field=models.CharField(max_length=1024, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='view',
            name='name',
            field=models.CharField(max_length=1024, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='name',
            field=models.CharField(max_length=1024, verbose_name='name'),
        ),
    ]
